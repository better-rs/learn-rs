version: "3"

#
# sub namespace: https://taskfile.dev/#/usage?id=including-other-taskfiles
#
includes:
  scripts:
    taskfile: ./crates/rs-scripts/Taskfile.yml
    dir: ./crates/rs-scripts/

#
# global vars: https://taskfile.dev/#/usage?id=variables
#
vars:
  VAR1: "some-var"

# global env:
env:
  ENV1: testing
  WORKSPACE: "crates/"

# env file:
dotenv:
  - .env

################################################################################################

tasks:
  default:
    cmds:
      - task: init
      - task: run

  init:
    cmds:
      - task: init:env
      - task: install

  init:env:
    cmds:
      - cp .env.local .env

  install:
    cmds:
      - cargo update

  ################################################################################


  new:
    cmds:
      - cargo new --lib rust-by-example
      - cargo new --lib rust-programming-in-action

  new:bin:
    cmds:
      - cd ${WORKSPACE}; cargo new ${NEW_PROJECT_NAME}

  ################################################################################


  run:
    cmds:
      - cargo run

  run:scripts:
    cmds:
      - cargo run --bin rs-scripts -- -n "Henry"
      - cargo run --bin rs-address-scanner -- -n "Henry"

  run:eth:scanner:
    cmds:
      - cargo run --bin rs-eth-scanner -- scan ${INFURA_RPC_URL} ${ETH_ADDRESS} ${TX_TYPE} ${TX_COUNT}


  run:discord:
    cmds:
      - task: scripts:run:discord

  run:scripts:help:
    cmds:
      - cargo run --bin rs-scripts -- -h

  ################################################################################

  # search lib:
  search:
    cmds:
      - cargo search


  ###########################################################################

  push:
    cmds:
      - git push origin main --tags
      - repo_url=`git remote -v | grep push | awk -F ":" '{print $2}' | awk -F ".git" '{print "https://github.com/"$1}'`; open $repo_url

