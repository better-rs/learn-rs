version: "3"

#
# sub namespace: https://taskfile.dev/#/usage?id=including-other-taskfiles
#
includes:
  os:
    taskfile: ./crates/rs-os/
    dir: ./crates/rs-os/
    optional: true

  try:
    taskfile: ./crates/try/
    dir: ./crates/try/
    optional: true

  cli:
    taskfile: ./crates/rs-cli/
    dir: ./crates/rs-cli/

  cms:
    taskfile: ./crates/try/rs-cms/
    dir: ./crates/try/rs-cms/
    optional: true

  ffi:core:
    taskfile: ./crates/rs-ffi/rs-ffi-core/
    dir: ./crates/rs-ffi/rs-ffi-core/
    optional: true

  tonic:
    taskfile: ./crates/rs-rpc/rs-tonic/
    dir: ./crates/rs-rpc/rs-tonic/
    optional: true

  volo:
    taskfile: ./crates/rs-rpc/rs-volo/
    dir: ./crates/rs-rpc/rs-volo/
    optional: true

  gui:
    taskfile: ./crates/rs-gui/
    dir: ./crates/rs-gui/
    optional: true

  tauri:
    taskfile: ./crates/rs-gui/rs-tauri-vue/
    dir: ./crates/rs-gui/rs-tauri-vue/
    optional: true

  sqlc:
    taskfile: crates/rs-sql/rs-sqlcipher
    dir: crates/rs-sql/rs-sqlcipher

  pkg:
    taskfile: crates/rs-pkg
    dir: crates/rs-pkg

#
# global vars: https://taskfile.dev/#/usage?id=variables
#
vars:
  VAR1: "some-var"

# global env:
env:
  ENV1: testing
  WORKSPACE: "crates/"

# env file:
dotenv:
  - .env

################################################################################################

tasks:
  default:
    cmds:
      - task: init
      - task: run

  init:
    cmds:
      - task: init:env
      - task: install
      - task: init:git:hook

  init:env:
    cmds:
      - cp .env.local .env

  init:git:hook:
    cmds:
      - pre-commit install

  dev:
    cmds:
      - rustup toolchain install nightly
      - rustup toolchain list

  install:pre:
    cmds:
      - brew install go-task/tap/go-task
      - brew install pre-commit
      - pre-commit --version
      - task --version

  install:tool:
    cmds:
      - cargo install sea-orm-cli
      - sea-orm-cli -h
      - cargo install cargo-watch

  install:
    cmds:
      - cargo update

  ################################################################################

  model:init:
    cmds:
      - sea-orm-cli generate entity -u ${DATABASE_URL} -o {{.APP_NAME}}/src
      - cd {{.APP_NAME}}; cargo init --lib;
      - cd {{.APP_NAME}}; cp -f src/core src/lib.rs; rm src/core;
    vars:
      APP_NAME: "crates/rs-cms-entity"
    ignore_error: true

  migration:init:
    cmds:
      - sea-orm-cli migrate init -d {{.APP_NAME}}
    #      - sea-orm-cli migrate generate create -d {{.APP_NAME}}  # generate empty migration file
    vars:
      APP_NAME: "crates/rs-cms-migration"

  # usage:
  #   - task n -- --lib tmp/demo1
  #   - task n -- --bin tmp/demo2
  new:
    aliases: ["n"]
    cmds:
      - cargo new {{.CLI_ARGS}}

  ################################################################################

  release:
    cmds:
      - task: cli:release
      - open ./target/release

  install:this:
    cmds:
      - task: cli:install
      - open ./target/release

  run:
    cmds:
      - cargo run

  run:cli:
    cmds:
      - task: cli:run:scripts

  run:eth:scanner:
    cmds:
      - task: cli:run:eth:scanner

  run:discord:
    cmds:
      - task: cli:run:discord

  run:cli:help:
    cmds:
      - cargo run --bin rs-cli -- -h

  ################################################################################

  build:
    cmds:
      - cargo build

  update:
    cmds:
      - cargo upgrade --verbose --compatible
      - cargo upgrade --incompatible

  # search lib:
  search:
    cmds:
      - cargo search

  ###########################################################################

  quick:
    aliases: ["q"]
    cmds:
      - task: commit
      - task: commit
      - git status
      - task: push
    ignore_error: true

  commit:
    aliases: ["c"]
    cmds:
      - git add .
      - git commit -m "update" --no-verify
    ignore_error: true

  pull:
    aliases: ["pl"]
    cmds:
      - git pull

  push:
    aliases: ["p"]
    cmds:
      - git push origin main --tags
      - repo_url=`git remote -v | grep push | awk -F ":" '{print $2}' | awk -F ".git" '{print "https://github.com/"$1}'`; open $repo_url
