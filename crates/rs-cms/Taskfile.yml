version: "3"

# global env:
env:
  ENV1: testing
  #  OUT_DIR: "/Users/dev/Documents/iSpace/better-go/matrix/app/try/volo-example"
  DATABASE_URL: "mysql://root:root@127.0.0.1:13306/cms"



tasks:
  init:
    - echo "init"

  install:
    cmds:
      - cargo install cargo-watch  # auto compile and run:
      - cargo install diesel_cli
      - cargo install sea-orm-cli # ref: https://www.sea-ql.org/SeaORM/docs/generate-entity/sea-orm-cli/

  run:
    cmds:
      - echo "run cms"
      - RUST_BACKTRACE=1 cargo run

  # auto compile and run:
  watch:
    cmds:
      - cargo watch -x run

  clean:
    cmds:
      - cargo clean

  open:
    cmds:
      - open http://localhost:3000

  docs:
    cmds:
      - open https://github.com/tokio-rs/axum
      - open https://github.com/diesel-rs/diesel
      - open https://diesel.rs/
      - open https://crates.io/crates/tracing


  ###############################################################################

  db:migrate:model:
    cmds:
      - echo "db url $DATABASE_URL"
      - sea-orm-cli generate entity -u ${DATABASE_URL} -o {{.APP_NAME}}/src
      - cd {{.APP_NAME}}; cargo init --lib;
      - cd {{.APP_NAME}}; mv src/mod.rs src/lib.rs;
      - cd {{.APP_NAME}}; cargo add serde@1 --features derive
      - cd {{.APP_NAME}}; cargo add sea-orm@0.9
    vars:
      APP_NAME: "rs-entity"
    ignore_error: true


  ###############################################################################

  db:setup:
    cmds:
      - diesel setup

  db:add:
    cmds:
      - diesel migration generate posts

  # create tables:
  db:init:
    cmds:
      - diesel migration run

  db:redo:
    cmds:
      - diesel migration redo

  # delete all tables:
  db:revert:
    cmds:
      - diesel migration revert

  db:reset:
    cmds:
      - diesel database reset

  db:help:
    cmds:
      - diesel help

  db:show:
    cmds:
      - diesel print-schema
